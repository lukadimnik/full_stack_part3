{"version":3,"sources":["components/Numbers.js","components/Searchfilter.js","components/Form.js","components/Person.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Numbers","props","renderRows","Searchfilter","value","filter","onChange","handleFilter","Form","onSubmit","addPerson","newName","handleName","newNumber","handleNumber","type","Person","person","name","number","onClick","deletePerson","index","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","notification","isError","className","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","notificationMessage","setNotificationMessage","setIsError","useEffect","personService","initialPersons","catch","err","console","error","window","confirm","updatedPersons","toLowerCase","includes","map","i","key","event","target","preventDefault","personObject","find","updatedPersonsId","updatedPersonsArray","setTimeout","returnedPerson","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0773f76e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Numbers = props => {\r\n  return (\r\n    <div>\r\n      <h2>Numbers</h2>\r\n      <div>{props.renderRows}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Numbers;\r\n","import React from \"react\";\r\n\r\nconst Searchfilter = props => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        Filter shown with{\" \"}\r\n        <input value={props.filter} onChange={props.handleFilter} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchfilter;\r\n","import React from \"react\";\r\n\r\nconst Form = props => {\r\n  return (\r\n    <div>\r\n      <h2>Add new</h2>\r\n      <form onSubmit={props.addPerson}>\r\n        <div>\r\n          name: <input value={props.newName} onChange={props.handleName} />\r\n        </div>\r\n        <div>\r\n          number:{\" \"}\r\n          <input value={props.newNumber} onChange={props.handleNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Person = (props) => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        {`${props.person.name}:   ${props.person.number}  `}\r\n        <button onClick={() => props.deletePerson(props.index)}>Delete</button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:3001/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request;\r\n};\r\n\r\nexport default {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update,\r\n  remove: remove,\r\n};\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ notification, isError }) => {\r\n  if (notification === null) {\r\n    return null;\r\n  }\r\n\r\n  if (isError) {\r\n    return <div className=\"error\">{notification}</div>;\r\n  }\r\n\r\n  return <div className=\"notification\">{notification}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport Numbers from \"./components/Numbers\";\nimport Searchfilter from \"./components/Searchfilter\";\nimport Form from \"./components/Form\";\nimport Person from \"./components/Person\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((initialPersons) => {\n        setPersons(initialPersons);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  const handleName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumber = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    // create a new person object with new name\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    // check if array of persons includes person with the name user is trying to add\n    if (persons.find((person) => person.name === newName)) {\n      // inform user that user with the name already exists and ask if he wants to update number\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook. Would you like to replace the number with a new one?`\n        )\n      ) {\n        // we get the id of the person whose number we will update\n        const updatedPersonsId = persons.find(\n          (person) => person.name === newName\n        ).id;\n\n        // we send the put request and reset the persons array with the new number\n        personService\n          .update(updatedPersonsId, personObject)\n          .then(() => {\n            let updatedPersonsArray = persons.filter(\n              (person) => person.name !== newName\n            );\n            updatedPersonsArray = [...updatedPersonsArray, personObject];\n            setPersons(updatedPersonsArray);\n            setNotificationMessage(`${personObject.name}'s number is updated!`);\n            setTimeout(() => {\n              setNotificationMessage(null);\n            }, 5000);\n            setNewName(\"\");\n            setNewNumber(\"\");\n          })\n          .catch((err) => {\n            setNotificationMessage(\n              `Information of ${personObject.name} has already been removed from server`\n            );\n            setIsError(true);\n            setTimeout(() => {\n              setNotificationMessage(null);\n              setIsError(false);\n            }, 5000);\n          });\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          setNotificationMessage(`Successfully added ${personObject.name}!`);\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n\n  const deletePerson = (id) => {\n    if (window.confirm(\"Are you sure you want to remove this person?\")) {\n      personService\n        .remove(id)\n        .then(() => {\n          const updatedPersons = persons.filter((person) => person.id !== id);\n          setPersons(updatedPersons);\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n\n  const renderRows = persons\n    .filter((person) => person.name.toLowerCase().includes(filter))\n    .map((person, i) => (\n      <Person\n        key={i}\n        person={person}\n        deletePerson={deletePerson}\n        index={person.id}\n      />\n    ));\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification={notificationMessage} isError={isError} />\n      <Searchfilter filter={filter} handleFilter={handleFilter} />\n      <Form\n        newName={newName}\n        newNumber={newNumber}\n        handleName={handleName}\n        handleNumber={handleNumber}\n        addPerson={addPerson}\n      />\n      <Numbers renderRows={renderRows} />\n    </div>\n  );\n};\n\nexport default App;\n\n// { \"name\": \"Arto Hellas\", \"number\": \"234-435634\", \"id\": 1 },\n// { \"name\": \"Lydia French\", \"number\": \"234-4232334\", \"id\": 2 },\n// { \"name\": \"Julia Roberts\", \"number\": \"21254-435634\", \"id\": 3 },\n// { \"name\": \"Conor McGregor\", \"number\": \"204-430034\", \"id\": 4 },\n// { \"name\": \"Urho Kekkonen\", \"number\": \"2398-435634\", \"id\": 5 },\n// { \"name\": \"Ada Lovelace\", \"number\": \"39-44-5323523\", \"id\": 6 },\n// { \"name\": \"Dan Abramov\", \"number\": \"12-43-234345\", \"id\": 7 },\n// { \"name\": \"Mary Poppendieck\", \"number\": \"39-23-6423122\", \"id\": 8 },\n\n// {\n//   \"name\": \"Mary Poppendieck\",\n//   \"number\": \"39-23-6423122\",\n//   \"id\": 9\n// },\n// {\n//   \"name\": \"johnny\",\n//   \"number\": \"knoxwile\",\n//   \"id\": 10\n// },\n// {\n//   \"name\": \"Frida\",\n//   \"number\": \"5895-657\",\n//   \"id\": 11\n// },\n// {\n//   \"name\": \"dodo\",\n//   \"number\": \"78922-5547\",\n//   \"id\": 12\n// }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}